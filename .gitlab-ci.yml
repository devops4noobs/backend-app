stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: maven:latest
  script:
    - echo "Compiling the code..."
    - mvn clean install -DskipTests
    - echo "Compile complete."
  artifacts:
    paths:
      - ./target
.smoke test:
  stage: test
  image: openjdk:17-alpine
  before_script:
    - apk --no-cache add curl
  script:
    - java -jar ./target/spring-0.0.1-SNAPSHOT.jar &
    - sleep 30
    - curl http://localhost:8080/api/all | grep "xx"


unit-test-job:   # This job runs in the test stage.
  before_script:

image: "maven:latest"
  services:
  - "postgres:latest"
  stages: 
  - test
  test:
    script:
      - "echo \" TEST INTEGRATION - BUSINESS\""
      - "mvn clean install -f src/pom.xml -P test-business"
    stage: test
  variables:
    DATABASE_URL: "postgresql://localhost:5432/postgres"
    POSTGRES_DB: postgres
    POSTGRES_PASSWORD: postgres
    POSTGRES_SCRIPT_CREATION_SCHEMA: data.sql
    POSTGRES_SCRIPT_CREATION_TABLES: data.sql
    POSTGRES_SCRIPT_INSERT_DATA: data.sql
    POSTGRES_USER: postgres

.lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 10
    - echo "No lint issues found."

.deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
